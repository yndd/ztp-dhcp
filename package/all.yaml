apiVersion: v1
kind: Service
metadata:
  name: ztp-dhcp-yndd
  namespace: ndd-system
spec:
  selector:
    service.yndd: ztp.dhcp
  ports:
    - protocol: UDP
      port: 67
      targetPort: 6700
  type: LoadBalancer
  externalIPs:
    - 192.168.168.1

# ---
#
# apiVersion: v1
# kind: Pod
# metadata:
#   name: ztp-dhcp
#   namespace: ndd-system
#   labels:
#     service.yndd: ztp.dhcp
# spec:
#   serviceAccountName: ztp-dhcp
#   containers:
#   - name: ztp-dhcp
#     image: ghcr.io/steiler/ztp-dhcp:latest
#     args: ["run","--dhcpv4-port","6700"]
#     ports:
#       - containerPort: 6700
#     securityContext:
#       allowPrivilegeEscalation: true
#   imagePullSecrets:
#   - name: regcred

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ztp-dhcp
  labels:
    service.yndd: ztp.dhcp
spec:
  replicas: 1
  selector:
    matchLabels:
      service.yndd: ztp.dhcp
  template:
    metadata:
      labels:
        service.yndd: ztp.dhcp
    spec:
      serviceAccountName: ztp-dhcp
      containers:
      - name: ztp-dhcp
        image: ghcr.io/steiler/ztp-dhcp:latest
        args: ["run","--dhcpv4-port","6700"]
        ports:
          - containerPort: 6700
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: true
      imagePullSecrets:
      - name: regcred

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: ztp-dhcp
  namespace: ndd-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: ztp-dhcp
rules:
- apiGroups: ["topo.yndd.io"]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""] # "" indicates the core API group
  # retrive services to figure which external endpoint the ztp webserver runs on
  resources: ["services"]
  resourceNames: ["ztp-webserver-yndd"]
  verbs: ["get"]
---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: ClusterRoleBinding
metadata:
  name: ztp-dhcp
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: ztp-dhcp # "name" is case sensitive
  namespace: ndd-system
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: ClusterRole #this must be Role or ClusterRole
  name: ztp-dhcp # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io